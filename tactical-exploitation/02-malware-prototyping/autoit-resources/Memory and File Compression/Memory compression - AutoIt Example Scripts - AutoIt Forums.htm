<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"></head><body><pre>#NoTrayIcon

$sString = "lzwlzwlzwlzwlzwlzwlzwlzwlzwlzwlzwlzw"
ConsoleWrite("Before compression: " &amp; Binary($sString) &amp; @CRLF)

$BC = _LZNTCompress($sString)
ConsoleWrite("Compressed: " &amp; $BC &amp; @CRLF)

$CB = _LZNTDecompress($BC)
ConsoleWrite("Decompressed: " &amp; $CB &amp; @CRLF)






; #FUNCTION# ;===============================================================================
;
; Name...........: _LZNTDecompress
; Description ...: Decompresses input data.
; Syntax.........: _LZNTDecompress ($bBinary)
; Parameters ....: $vInput - Binary data to decompress.
; Return values .: Success - Returns decompressed binary data.
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- Sets @error to 0
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Failure - Returns empty string and sets @error:
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|1 - Error decompressing.
; Author ........: trancexx
; Related .......: _LZNTCompress
; Link ..........; http://msdn.microsoft.com/en-us/library/bb981784.aspx
;
;==========================================================================================
Func _LZNTDecompress($bBinary)

&nbsp; &nbsp; $bBinary = Binary($bBinary)

&nbsp; &nbsp; Local $tInput = DllStructCreate("byte[" &amp; BinaryLen($bBinary) &amp; "]")
&nbsp; &nbsp; DllStructSetData($tInput, 1, $bBinary)

&nbsp; &nbsp; Local $tBuffer = DllStructCreate("byte[" &amp; 16 * DllStructGetSize($tInput) &amp; "]") ; initially oversizing buffer

&nbsp; &nbsp; Local $a_Call = DllCall("ntdll.dll", "int", "RtlDecompressBuffer", _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ushort", 2, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ptr", DllStructGetPtr($tBuffer), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword", DllStructGetSize($tBuffer), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ptr", DllStructGetPtr($tInput), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword", DllStructGetSize($tInput), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword*", 0)

&nbsp; &nbsp; If @error Or $a_Call[0] Then
&nbsp; &nbsp; &nbsp; &nbsp; Return SetError(1, 0, "") ; error decompressing
&nbsp; &nbsp; EndIf

&nbsp; &nbsp; Local $tOutput = DllStructCreate("byte[" &amp; $a_Call[6] &amp; "]", DllStructGetPtr($tBuffer))

&nbsp; &nbsp; Return SetError(0, 0, DllStructGetData($tOutput, 1))

EndFunc &nbsp; ;==&gt;_LZNTDecompress



; #FUNCTION# ;===============================================================================
;
; Name...........: _LZNTCompress
; Description ...: Compresses input data.
; Syntax.........: _LZNTCompress ($vInput [, $iCompressionFormatAndEngine])
; Parameters ....: $vInput - Data to compress.
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp;$iCompressionFormatAndEngine - Compression format and 
engine type. Default is 2 (standard compression). Can be:
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|2 - COMPRESSION_FORMAT_LZNT1 | COMPRESSION_ENGINE_STANDARD
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|258 - COMPRESSION_FORMAT_LZNT1 | COMPRESSION_ENGINE_MAXIMUM
; Return values .: Success - Returns compressed binary data.
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- Sets @error to 0
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Failure - Returns empty string and sets @error:
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|1 - Error determining workspace buffer size.
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|2 - Error compressing.
; Author ........: trancexx
; Related .......: _LZNTDecompress
; Link ..........; http://msdn.microsoft.com/en-us/library/bb981783.aspx
;
;==========================================================================================
Func _LZNTCompress($vInput, $iCompressionFormatAndEngine = 2)

&nbsp; &nbsp; If Not ($iCompressionFormatAndEngine = 258) Then 
&nbsp; &nbsp; &nbsp; &nbsp; $iCompressionFormatAndEngine = 2
&nbsp; &nbsp; EndIf &nbsp; 
&nbsp; &nbsp; 
&nbsp; &nbsp; Local $bBinary = Binary($vInput)

&nbsp; &nbsp; Local $tInput = DllStructCreate("byte[" &amp; BinaryLen($bBinary) &amp; "]")
&nbsp; &nbsp; DllStructSetData($tInput, 1, $bBinary)

&nbsp; &nbsp; Local $a_Call = DllCall("ntdll.dll", "int", "RtlGetCompressionWorkSpaceSize", _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ushort", $iCompressionFormatAndEngine, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword*", 0, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword*", 0)

&nbsp; &nbsp; If @error Or $a_Call[0] Then
&nbsp; &nbsp; &nbsp; &nbsp; Return SetError(1, 0, "") ; error determining workspace buffer size
&nbsp; &nbsp; EndIf

&nbsp; &nbsp; Local $tWorkSpace = DllStructCreate("byte[" &amp; $a_Call[2] &amp; "]") ; workspace is needed for compression

&nbsp; &nbsp; Local $tBuffer = DllStructCreate("byte[" &amp; 16 * DllStructGetSize($tInput) &amp; "]") ; initially oversizing buffer

&nbsp; &nbsp; Local $a_Call = DllCall("ntdll.dll", "int", "RtlCompressBuffer", _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ushort", $iCompressionFormatAndEngine, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ptr", DllStructGetPtr($tInput), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword", DllStructGetSize($tInput), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ptr", DllStructGetPtr($tBuffer), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword", DllStructGetSize($tBuffer), _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword", 4096, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "dword*", 0, _
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ptr", DllStructGetPtr($tWorkSpace))

&nbsp; &nbsp; If @error Or $a_Call[0] Then
&nbsp; &nbsp; &nbsp; &nbsp; Return SetError(2, 0, "") ; error compressing
&nbsp; &nbsp; EndIf

&nbsp; &nbsp; Local $tOutput = DllStructCreate("byte[" &amp; $a_Call[7] &amp; "]", DllStructGetPtr($tBuffer))

&nbsp; &nbsp; Return SetError(0, 0, DllStructGetData($tOutput, 1))

EndFunc &nbsp; ;==&gt;_LZNTCompress</pre></body></html>