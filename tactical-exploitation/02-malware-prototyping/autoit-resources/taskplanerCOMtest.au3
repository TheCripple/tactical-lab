

#include "taskplanerCOM.au3"

_TestTaskSchedulerUDF()

Func _TestTaskSchedulerUDF()
	If _TaskSchedulerAutostart() Then
		$taskname1 = "Testname1"
		$taskname2 = "Testname2"
		$taskfolder1 = "testfolder1"
		$taskfolder2 = "testfolder2"
		$result = _TaskFolderCreate($taskfolder1)
		If $result = 1 Then
			MsgBox(0, "Success", "The folder with the name " & $taskfolder1 & " was created successfully")
		Else
			MsgBox(0, "Failure", "The folder with the name " & $taskfolder1 & " was not created successfully")
			Exit
		EndIf
		$result = _TaskFolderCreate($taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The folder with the name " & $taskfolder1 & "\" & $taskfolder2 & " was created successfully")
		Else
			MsgBox(0, "Failure", "The folder with the name " & $taskfolder1 & "\" & $taskfolder2 & " was not created successfully")
			Exit
		EndIf
		$result = _TaskFolderExists($taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The folder with the name " & $taskfolder1 & "\" & $taskfolder2 & " exists")
		Else
			MsgBox(0, "Failure", "The folder with the name " & $taskfolder1 & "\" & $taskfolder2 & " does not exist")
			Exit
		EndIf

		$result = _TaskCreate($taskfolder1 & "\" & $taskfolder2 & "\" & $taskname1, "Description of this Task", 3, "2011-03-30T08:00:00", "", 2, 1, 1, 1, 1, "PT1H", False, 3, 0, "", "", '"c:\windows\system32\notepad.exe"', "", "", False)
		If $result = 1 Then
			MsgBox(0, "Success", "The task with the name " & $taskname1 & " was created successfully")
		Else
			MsgBox(0, "Failure", "The task with the name " & $taskname1 & " was not created successfully")
			Exit
		EndIf
		$result = _TaskCreate($taskfolder1 & "\" & $taskfolder2 & "\" & $taskname2, "Description of this Task", 3, "2011-03-30T08:00:00", "", 2, 1, 1, 1, 1, "PT1H", False, 3, 0, "", "", '"c:\windows\system32\notepad.exe"', "", "", False)
		If $result = 1 Then
			MsgBox(0, "Success", "The task with the name " & $taskname2 & " was created successfully")
		Else
			MsgBox(0, "Failure", "The task with the name " & $taskname2 & " was not created successfully")
			Exit
		EndIf
		$result = _TaskStart($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The task with the name " & $taskname2 & " was started successfully")
		Else
			MsgBox(0, "Failure", "The task with the name " & $taskname2 & " was not started successfully")
			Exit
		EndIf
		$result = _TaskIsRunning($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The task with the name " & $taskname2 & " is running")
		ElseIf $result = 2 Then
			MsgBox(0, "Success", "The task with the name " & $taskname2 & " is not running")
		Else
			MsgBox(0, "Failure", "Not sure if the task with the name " & $taskname2 & " is running")
			Exit
		EndIf
		$result = _TaskStop($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The task with the name " & $taskname2 & " was stopped successfully")
		Else
			MsgBox(0, "Failure", "The task with the name " & $taskname2 & " was not stopped successfully")
			Exit
		EndIf
		$result = _TaskListAll($taskfolder1 & "\" & $taskfolder2, 1)
		If @error = 0 Then
			MsgBox(0, "Success", "The following tasks were found:" & @CRLF & $result)
		Else
			MsgBox(0, "Failure", "Tasks could not be listed")
			Exit
		EndIf

		$result = _TaskExists($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If @error = 0 Then
			MsgBox(0, "Success", "The task " & $taskname2 & " exists")
		Else
			MsgBox(0, "Failure", "The task " & $taskname2 & " does not exist")
			Exit
		EndIf

		$result = _TaskDisable($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If @error = 0 Then
			MsgBox(0, "Success", "The task " & $taskname2 & " was disabled")
		Else
			MsgBox(0, "Failure", "The task " & $taskname2 & " was not disabled")
			Exit
		EndIf

		$result = _TaskIsEnabled($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If @error = 0 Then
			MsgBox(0, "Success", "_TaskIsEnabled result for task " & $taskname2 & " is " & $result)
		Else
			MsgBox(0, "Failure", "_TaskIsEnabled for " & $taskname2 & " failed")
			Exit
		EndIf

		$result = _TaskEnable($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If @error = 0 Then
			MsgBox(0, "Success", "The task " & $taskname2 & " was enabled")
		Else
			MsgBox(0, "Failure", "The task " & $taskname2 & " was not enabled")
			Exit
		EndIf

		$result = _TaskIsEnabled($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If @error = 0 Then
			MsgBox(0, "Success", "_TaskIsEnabled result for task " & $taskname2 & " is " & $result)
		Else
			MsgBox(0, "Failure", "_TaskIsEnabled for " & $taskname2 & " failed")
			Exit
		EndIf

		$result = _TaskDelete($taskname1, $taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The Task with the name " & $taskname1 & " was deleted successfully")
		Else
			MsgBox(0, "Failure", "The Task with the name " & $taskname1 & " was not deleted successfully")
			Exit
		EndIf

		$result = _TaskDelete($taskname2, $taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The Task with the name " & $taskname2 & " was deleted successfully")
		Else
			MsgBox(0, "Failure", "The Task with the name " & $taskname2 & " was not deleted successfully")
			Exit
		EndIf

		$result = _TaskFolderDelete($taskfolder1 & "\" & $taskfolder2)
		If $result = 1 Then
			MsgBox(0, "Success", "The Taskfolder with the name " & $taskfolder1 & "\" & $taskfolder2 & " was deleted successfully")
		Else
			MsgBox(0, "Failure", "The Taskfolder with the name " & $taskfolder1 & "\" & $taskfolder2 & " was not deleted successfully")
			Exit
		EndIf
		$result = _TaskFolderDelete($taskfolder1)
		If $result = 1 Then
			MsgBox(0, "Success", "The Taskfolder with the name " & $taskfolder1 & " was deleted successfully")
		Else
			MsgBox(0, "Failure", "The Taskfolder with the name " & $taskfolder1 & " was not deleted successfully")
			Exit
		EndIf
	Else
		MsgBox(0, "Error", "The TaskSchedulerService is not set to start at system boot - it may not be running")
		Exit
	EndIf
EndFunc   ;==>_TestTaskSchedulerUDF
